// <auto-generated />

using System;
using DocStore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DocStore.Server.Migrations
{
    [DbContext(typeof(EfContext))]
    internal class EfContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DocStore.Core.Entities.Doc", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("text");

                b.Property<string>("CollectionName")
                    .HasColumnType("text");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("CreatedBy")
                    .HasColumnType("text");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("DeletedBy")
                    .HasColumnType("text");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<string>("JsonData")
                    .HasColumnType("text");

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("UpdatedBy")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Documents");
            });

            modelBuilder.Entity("DocStore.Core.Entities.User", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("text");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("CreatedBy")
                    .HasColumnType("text");

                b.Property<string>("FirstName")
                    .HasColumnType("text");

                b.Property<string>("LastName")
                    .HasColumnType("text");

                b.Property<byte[]>("PasswordHash")
                    .HasColumnType("bytea");

                b.Property<byte[]>("PasswordSalt")
                    .HasColumnType("bytea");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("UpdatedBy")
                    .HasColumnType("text");

                b.Property<string>("UserName")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Users");
            });
#pragma warning restore 612, 618
        }
    }
}